/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  RevertibleBox,
  RevertibleBoxInterface,
} from "../../contracts/RevertibleBox";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "initialValue",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "newValue",
        type: "bool",
      },
    ],
    name: "ShouldRevertChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "newValue",
        type: "string",
      },
    ],
    name: "ValueChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newValue",
        type: "string",
      },
    ],
    name: "changeValueCouldRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newValue",
        type: "string",
      },
    ],
    name: "changeValueDryRun",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newValue",
        type: "string",
      },
    ],
    name: "changeValueNoRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newValue",
        type: "string",
      },
    ],
    name: "changeValueOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_testKey",
        type: "string",
      },
    ],
    name: "getMapping",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getValue",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shouldRevert",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "switchShouldRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "testMapping",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_testKey",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_testVal",
        type: "uint256",
      },
    ],
    name: "updateMapping",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200141938038062001419833981810160405281019062000037919062000280565b620000576200004b6200009260201b60201c565b6200009a60201b60201c565b80600190805190602001906200006f9291906200015e565b506000600260006101000a81548160ff0219169083151502179055505062000435565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8280546200016c906200035a565b90600052602060002090601f016020900481019282620001905760008555620001dc565b82601f10620001ab57805160ff1916838001178555620001dc565b82800160010185558215620001dc579182015b82811115620001db578251825591602001919060010190620001be565b5b509050620001eb9190620001ef565b5090565b5b808211156200020a576000816000905550600101620001f0565b5090565b6000620002256200021f84620002ee565b620002c5565b9050828152602081018484840111156200023e57600080fd5b6200024b84828562000324565b509392505050565b600082601f8301126200026557600080fd5b8151620002778482602086016200020e565b91505092915050565b6000602082840312156200029357600080fd5b600082015167ffffffffffffffff811115620002ae57600080fd5b620002bc8482850162000253565b91505092915050565b6000620002d1620002e4565b9050620002df828262000390565b919050565b6000604051905090565b600067ffffffffffffffff8211156200030c576200030b620003f5565b5b620003178262000424565b9050602081019050919050565b60005b838110156200034457808201518184015260208101905062000327565b8381111562000354576000848401525b50505050565b600060028204905060018216806200037357607f821691505b602082108114156200038a5762000389620003c6565b5b50919050565b6200039b8262000424565b810181811067ffffffffffffffff82111715620003bd57620003bc620003f5565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b610fd480620004456000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806363ba13371161008c5780638da5cb5b116100665780638da5cb5b1461020f578063b85b29951461022d578063d3072d8214610249578063f2fde38b14610267576100ea565b806363ba1337146101cd578063715018a6146101e95780638d73fe89146101f3576100ea565b8063142c9eb5116100c8578063142c9eb51461015957806315b601411461016357806320965255146101935780635f606662146101b1576100ea565b80630d8e6e2c146100ef57806311f45e9c1461010d578063130e16331461013d575b600080fd5b6100f7610283565b6040516101049190610c59565b60405180910390f35b61012760048036038101906101229190610a26565b6102c0565b6040516101349190610cdb565b60405180910390f35b610157600480360381019061015291906109e1565b6102e8565b005b610161610387565b005b61017d60048036038101906101789190610a26565b610401565b60405161018a9190610cdb565b60405180910390f35b61019b61042f565b6040516101a89190610c59565b60405180910390f35b6101cb60048036038101906101c69190610a67565b610511565b005b6101e760048036038101906101e291906109e1565b610538565b005b6101f1610575565b005b61020d600480360381019061020891906109e1565b610589565b005b6102176105e0565b6040516102249190610bff565b60405180910390f35b610247600480360381019061024291906109e1565b610609565b005b610251610658565b60405161025e9190610c1a565b60405180910390f35b610281600480360381019061027c91906109b8565b61066b565b005b60606040518060400160405280600281526020017f5631000000000000000000000000000000000000000000000000000000000000815250905090565b60006003826040516102d29190610be8565b9081526020016040518091039020549050919050565b600260009054906101000a900460ff1615610338576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032f90610cbb565b60405180910390fd5b818160019190610349929190610839565b507fce59a1f2cca0fa1bf7d80c74a303393cb56e768ec38427649054a68be65e11d7828260405161037b929190610c35565b60405180910390a15050565b61038f6106ef565b600260009054906101000a900460ff1615600260006101000a81548160ff0219169083151502179055507f88e95cf2f314e458491f98f3be8f296ee704bfc5b2cbeddcda73b61d44c9060b600260009054906101000a900460ff166040516103f79190610c1a565b60405180910390a1565b6003818051602081018201805184825260208301602085012081835280955050505050506000915090505481565b6060600260009054906101000a900460ff1615610481576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047890610cbb565b60405180910390fd5b6001805461048e90610dfd565b80601f01602080910402602001604051908101604052809291908181526020018280546104ba90610dfd565b80156105075780601f106104dc57610100808354040283529160200191610507565b820191906000526020600020905b8154815290600101906020018083116104ea57829003601f168201915b5050505050905090565b806003836040516105229190610be8565b9081526020016040518091039020819055505050565b7fce59a1f2cca0fa1bf7d80c74a303393cb56e768ec38427649054a68be65e11d78282604051610569929190610c35565b60405180910390a15050565b61057d6106ef565b610587600061076d565b565b6105916106ef565b8181600191906105a2929190610839565b507fce59a1f2cca0fa1bf7d80c74a303393cb56e768ec38427649054a68be65e11d782826040516105d4929190610c35565b60405180910390a15050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b81816001919061061a929190610839565b507fce59a1f2cca0fa1bf7d80c74a303393cb56e768ec38427649054a68be65e11d7828260405161064c929190610c35565b60405180910390a15050565b600260009054906101000a900460ff1681565b6106736106ef565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106da90610c7b565b60405180910390fd5b6106ec8161076d565b50565b6106f7610831565b73ffffffffffffffffffffffffffffffffffffffff166107156105e0565b73ffffffffffffffffffffffffffffffffffffffff161461076b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076290610c9b565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b82805461084590610dfd565b90600052602060002090601f01602090048101928261086757600085556108ae565b82601f1061088057803560ff19168380011785556108ae565b828001600101855582156108ae579182015b828111156108ad578235825591602001919060010190610892565b5b5090506108bb91906108bf565b5090565b5b808211156108d85760008160009055506001016108c0565b5090565b60006108ef6108ea84610d1b565b610cf6565b90508281526020810184848401111561090757600080fd5b610912848285610dbb565b509392505050565b60008135905061092981610f70565b92915050565b60008083601f84011261094157600080fd5b8235905067ffffffffffffffff81111561095a57600080fd5b60208301915083600182028301111561097257600080fd5b9250929050565b600082601f83011261098a57600080fd5b813561099a8482602086016108dc565b91505092915050565b6000813590506109b281610f87565b92915050565b6000602082840312156109ca57600080fd5b60006109d88482850161091a565b91505092915050565b600080602083850312156109f457600080fd5b600083013567ffffffffffffffff811115610a0e57600080fd5b610a1a8582860161092f565b92509250509250929050565b600060208284031215610a3857600080fd5b600082013567ffffffffffffffff811115610a5257600080fd5b610a5e84828501610979565b91505092915050565b60008060408385031215610a7a57600080fd5b600083013567ffffffffffffffff811115610a9457600080fd5b610aa085828601610979565b9250506020610ab1858286016109a3565b9150509250929050565b610ac481610d73565b82525050565b610ad381610d85565b82525050565b6000610ae58385610d57565b9350610af2838584610dbb565b610afb83610ebe565b840190509392505050565b6000610b1182610d4c565b610b1b8185610d57565b9350610b2b818560208601610dca565b610b3481610ebe565b840191505092915050565b6000610b4a82610d4c565b610b548185610d68565b9350610b64818560208601610dca565b80840191505092915050565b6000610b7d602683610d57565b9150610b8882610ecf565b604082019050919050565b6000610ba0602083610d57565b9150610bab82610f1e565b602082019050919050565b6000610bc3600d83610d57565b9150610bce82610f47565b602082019050919050565b610be281610db1565b82525050565b6000610bf48284610b3f565b915081905092915050565b6000602082019050610c146000830184610abb565b92915050565b6000602082019050610c2f6000830184610aca565b92915050565b60006020820190508181036000830152610c50818486610ad9565b90509392505050565b60006020820190508181036000830152610c738184610b06565b905092915050565b60006020820190508181036000830152610c9481610b70565b9050919050565b60006020820190508181036000830152610cb481610b93565b9050919050565b60006020820190508181036000830152610cd481610bb6565b9050919050565b6000602082019050610cf06000830184610bd9565b92915050565b6000610d00610d11565b9050610d0c8282610e2f565b919050565b6000604051905090565b600067ffffffffffffffff821115610d3657610d35610e8f565b5b610d3f82610ebe565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000610d7e82610d91565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610de8578082015181840152602081019050610dcd565b83811115610df7576000848401525b50505050565b60006002820490506001821680610e1557607f821691505b60208210811415610e2957610e28610e60565b5b50919050565b610e3882610ebe565b810181811067ffffffffffffffff82111715610e5757610e56610e8f565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f53657420746f2072657665727400000000000000000000000000000000000000600082015250565b610f7981610d73565b8114610f8457600080fd5b50565b610f9081610db1565b8114610f9b57600080fd5b5056fea26469706673582212208570b12f32d43fe0353d7b88b750e2f893a45b8eb641bb4075c9f55dc604794764736f6c63430008040033";

type RevertibleBoxConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RevertibleBoxConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RevertibleBox__factory extends ContractFactory {
  constructor(...args: RevertibleBoxConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initialValue: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RevertibleBox> {
    return super.deploy(
      initialValue,
      overrides || {}
    ) as Promise<RevertibleBox>;
  }
  override getDeployTransaction(
    initialValue: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(initialValue, overrides || {});
  }
  override attach(address: string): RevertibleBox {
    return super.attach(address) as RevertibleBox;
  }
  override connect(signer: Signer): RevertibleBox__factory {
    return super.connect(signer) as RevertibleBox__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RevertibleBoxInterface {
    return new utils.Interface(_abi) as RevertibleBoxInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RevertibleBox {
    return new Contract(address, _abi, signerOrProvider) as RevertibleBox;
  }
}
