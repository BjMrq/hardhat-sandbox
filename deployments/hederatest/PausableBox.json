{
  "address": "0x0000000000000000000000000000000002eAe87A",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "initialValue",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "newValue",
          "type": "string"
        }
      ],
      "name": "ColorChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newValue",
          "type": "string"
        }
      ],
      "name": "changeValue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getValue",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "value",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x975aef8d7e5c5c1fbd5f97f3483bcc4ac8602effb971a6295c7b412eeb4dbf1d",
  "receipt": {
    "to": "0x0000000000000000000000000000000002eAe87A",
    "from": "0x0000000000000000000000000000000002db29a7",
    "contractAddress": "0x0000000000000000000000000000000002eAe87A",
    "transactionIndex": 2,
    "gasUsed": "320000",
    "logsBloom": "0x
    "blockHash": "0x8a64baee261e3e0d38938edbf3db8314424e1251ff20dbdc30d2feab881b894a",
    "transactionHash": "0x975aef8d7e5c5c1fbd5f97f3483bcc4ac8602effb971a6295c7b412eeb4dbf1d",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 27478628,
        "transactionHash": "0x975aef8d7e5c5c1fbd5f97f3483bcc4ac8602effb971a6295c7b412eeb4dbf1d",
        "address": "0x0000000000000000000000000000000002eAe87A",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000001d358d88b9215a1d42a22f46e7766b6f7fd5142b"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x8a64baee261e3e0d38938edbf3db8314424e1251ff20dbdc30d2feab881b894a"
      }
    ],
    "blockNumber": 27478628,
    "cumulativeGasUsed": "320000",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "pausable"
  ],
  "numDeployments": 1,
  "solcInputHash": "7bfa14a14cafac20740ffe86c4426a98",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"initialValue\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newValue\",\"type\":\"string\"}],\"name\":\"ColorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newValue\",\"type\":\"string\"}],\"name\":\"changeValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getValue\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"value\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PausableBox.sol\":\"PausableBox\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/PausableBox.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/security/Pausable.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract PausableBox is Pausable, Ownable {\\n\\n    string public value;\\n\\n    event ColorChanged(string newValue);\\n\\n\\n    constructor(string memory initialValue) {\\n        value = initialValue;\\n    }\\n\\n    function changeValue(string calldata newValue) public whenNotPaused {\\n        value = newValue;\\n        emit ColorChanged(newValue);\\n    }\\n\\n    function getValue() public view whenNotPaused returns(string memory) {\\n        return value;\\n    }\\n    \\n    function pause() public onlyOwner {\\n        _pause();\\n    }\\n\\n    function unpause() public onlyOwner {\\n        _unpause();\\n    }\\n}\",\"keccak256\":\"0x0f0a2fe915ef14ae1c42e14377a931ec1b95910ba432dc13e69858bf9e43ae6f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200106838038062001068833981810160405281019062000037919062000280565b60008060006101000a81548160ff02191690831515021790555062000071620000656200009160201b60201c565b6200009960201b60201c565b8060019080519060200190620000899291906200015e565b505062000435565b600033905090565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8280546200016c906200035a565b90600052602060002090601f016020900481019282620001905760008555620001dc565b82601f10620001ab57805160ff1916838001178555620001dc565b82800160010185558215620001dc579182015b82811115620001db578251825591602001919060010190620001be565b5b509050620001eb9190620001ef565b5090565b5b808211156200020a576000816000905550600101620001f0565b5090565b6000620002256200021f84620002ee565b620002c5565b9050828152602081018484840111156200023e57600080fd5b6200024b84828562000324565b509392505050565b600082601f8301126200026557600080fd5b8151620002778482602086016200020e565b91505092915050565b6000602082840312156200029357600080fd5b600082015167ffffffffffffffff811115620002ae57600080fd5b620002bc8482850162000253565b91505092915050565b6000620002d1620002e4565b9050620002df828262000390565b919050565b6000604051905090565b600067ffffffffffffffff8211156200030c576200030b620003f5565b5b620003178262000424565b9050602081019050919050565b60005b838110156200034457808201518184015260208101905062000327565b8381111562000354576000848401525b50505050565b600060028204905060018216806200037357607f821691505b602082108114156200038a5762000389620003c6565b5b50919050565b6200039b8262000424565b810181811067ffffffffffffffff82111715620003bd57620003bc620003f5565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b610c2380620004456000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063715018a611610066578063715018a6146100fc5780638456cb59146101065780638da5cb5b14610110578063e3a07ac01461012e578063f2fde38b1461014a57610093565b806320965255146100985780633f4ba83a146100b65780633fa4f245146100c05780635c975abb146100de575b600080fd5b6100a0610166565b6040516100ad919061095c565b60405180910390f35b6100be610200565b005b6100c8610212565b6040516100d5919061095c565b60405180910390f35b6100e66102a0565b6040516100f3919061091d565b60405180910390f35b6101046102b6565b005b61010e6102ca565b005b6101186102dc565b6040516101259190610902565b60405180910390f35b610148600480360381019061014391906107ad565b610305565b005b610164600480360381019061015f9190610784565b61035c565b005b60606101706103e0565b6001805461017d90610a9a565b80601f01602080910402602001604051908101604052809291908181526020018280546101a990610a9a565b80156101f65780601f106101cb576101008083540402835291602001916101f6565b820191906000526020600020905b8154815290600101906020018083116101d957829003601f168201915b5050505050905090565b61020861042a565b6102106104a8565b565b6001805461021f90610a9a565b80601f016020809104026020016040519081016040528092919081815260200182805461024b90610a9a565b80156102985780601f1061026d57610100808354040283529160200191610298565b820191906000526020600020905b81548152906001019060200180831161027b57829003601f168201915b505050505081565b60008060009054906101000a900460ff16905090565b6102be61042a565b6102c8600061050a565b565b6102d261042a565b6102da6105cf565b565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61030d6103e0565b81816001919061031e929190610682565b507fea8482eb24fdcbd88250f9fd14644f201467fcaf3c5f08a0675ed9d46977ae3b8282604051610350929190610938565b60405180910390a15050565b61036461042a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156103d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cb9061099e565b60405180910390fd5b6103dd8161050a565b50565b6103e86102a0565b15610428576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041f906109be565b60405180910390fd5b565b610432610631565b73ffffffffffffffffffffffffffffffffffffffff166104506102dc565b73ffffffffffffffffffffffffffffffffffffffff16146104a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049d906109de565b60405180910390fd5b565b6104b0610639565b60008060006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6104f3610631565b6040516105009190610902565b60405180910390a1565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6105d76103e0565b60016000806101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861061a610631565b6040516106279190610902565b60405180910390a1565b600033905090565b6106416102a0565b610680576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106779061097e565b60405180910390fd5b565b82805461068e90610a9a565b90600052602060002090601f0160209004810192826106b057600085556106f7565b82601f106106c957803560ff19168380011785556106f7565b828001600101855582156106f7579182015b828111156106f65782358255916020019190600101906106db565b5b5090506107049190610708565b5090565b5b80821115610721576000816000905550600101610709565b5090565b60008135905061073481610bd6565b92915050565b60008083601f84011261074c57600080fd5b8235905067ffffffffffffffff81111561076557600080fd5b60208301915083600182028301111561077d57600080fd5b9250929050565b60006020828403121561079657600080fd5b60006107a484828501610725565b91505092915050565b600080602083850312156107c057600080fd5b600083013567ffffffffffffffff8111156107da57600080fd5b6107e68582860161073a565b92509250509250929050565b6107fb81610a1a565b82525050565b61080a81610a2c565b82525050565b600061081c8385610a09565b9350610829838584610a58565b61083283610afb565b840190509392505050565b6000610848826109fe565b6108528185610a09565b9350610862818560208601610a67565b61086b81610afb565b840191505092915050565b6000610883601483610a09565b915061088e82610b0c565b602082019050919050565b60006108a6602683610a09565b91506108b182610b35565b604082019050919050565b60006108c9601083610a09565b91506108d482610b84565b602082019050919050565b60006108ec602083610a09565b91506108f782610bad565b602082019050919050565b600060208201905061091760008301846107f2565b92915050565b60006020820190506109326000830184610801565b92915050565b60006020820190508181036000830152610953818486610810565b90509392505050565b60006020820190508181036000830152610976818461083d565b905092915050565b6000602082019050818103600083015261099781610876565b9050919050565b600060208201905081810360008301526109b781610899565b9050919050565b600060208201905081810360008301526109d7816108bc565b9050919050565b600060208201905081810360008301526109f7816108df565b9050919050565b600081519050919050565b600082825260208201905092915050565b6000610a2582610a38565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015610a85578082015181840152602081019050610a6a565b83811115610a94576000848401525b50505050565b60006002820490506001821680610ab257607f821691505b60208210811415610ac657610ac5610acc565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610bdf81610a1a565b8114610bea57600080fd5b5056fea2646970667358221220c5fcbfcfc4bc4cf530946e19036203425d89ee51f777363c398a3cc768c1faa664736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c8063715018a611610066578063715018a6146100fc5780638456cb59146101065780638da5cb5b14610110578063e3a07ac01461012e578063f2fde38b1461014a57610093565b806320965255146100985780633f4ba83a146100b65780633fa4f245146100c05780635c975abb146100de575b600080fd5b6100a0610166565b6040516100ad919061095c565b60405180910390f35b6100be610200565b005b6100c8610212565b6040516100d5919061095c565b60405180910390f35b6100e66102a0565b6040516100f3919061091d565b60405180910390f35b6101046102b6565b005b61010e6102ca565b005b6101186102dc565b6040516101259190610902565b60405180910390f35b610148600480360381019061014391906107ad565b610305565b005b610164600480360381019061015f9190610784565b61035c565b005b60606101706103e0565b6001805461017d90610a9a565b80601f01602080910402602001604051908101604052809291908181526020018280546101a990610a9a565b80156101f65780601f106101cb576101008083540402835291602001916101f6565b820191906000526020600020905b8154815290600101906020018083116101d957829003601f168201915b5050505050905090565b61020861042a565b6102106104a8565b565b6001805461021f90610a9a565b80601f016020809104026020016040519081016040528092919081815260200182805461024b90610a9a565b80156102985780601f1061026d57610100808354040283529160200191610298565b820191906000526020600020905b81548152906001019060200180831161027b57829003601f168201915b505050505081565b60008060009054906101000a900460ff16905090565b6102be61042a565b6102c8600061050a565b565b6102d261042a565b6102da6105cf565b565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61030d6103e0565b81816001919061031e929190610682565b507fea8482eb24fdcbd88250f9fd14644f201467fcaf3c5f08a0675ed9d46977ae3b8282604051610350929190610938565b60405180910390a15050565b61036461042a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156103d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cb9061099e565b60405180910390fd5b6103dd8161050a565b50565b6103e86102a0565b15610428576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041f906109be565b60405180910390fd5b565b610432610631565b73ffffffffffffffffffffffffffffffffffffffff166104506102dc565b73ffffffffffffffffffffffffffffffffffffffff16146104a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049d906109de565b60405180910390fd5b565b6104b0610639565b60008060006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6104f3610631565b6040516105009190610902565b60405180910390a1565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6105d76103e0565b60016000806101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861061a610631565b6040516106279190610902565b60405180910390a1565b600033905090565b6106416102a0565b610680576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106779061097e565b60405180910390fd5b565b82805461068e90610a9a565b90600052602060002090601f0160209004810192826106b057600085556106f7565b82601f106106c957803560ff19168380011785556106f7565b828001600101855582156106f7579182015b828111156106f65782358255916020019190600101906106db565b5b5090506107049190610708565b5090565b5b80821115610721576000816000905550600101610709565b5090565b60008135905061073481610bd6565b92915050565b60008083601f84011261074c57600080fd5b8235905067ffffffffffffffff81111561076557600080fd5b60208301915083600182028301111561077d57600080fd5b9250929050565b60006020828403121561079657600080fd5b60006107a484828501610725565b91505092915050565b600080602083850312156107c057600080fd5b600083013567ffffffffffffffff8111156107da57600080fd5b6107e68582860161073a565b92509250509250929050565b6107fb81610a1a565b82525050565b61080a81610a2c565b82525050565b600061081c8385610a09565b9350610829838584610a58565b61083283610afb565b840190509392505050565b6000610848826109fe565b6108528185610a09565b9350610862818560208601610a67565b61086b81610afb565b840191505092915050565b6000610883601483610a09565b915061088e82610b0c565b602082019050919050565b60006108a6602683610a09565b91506108b182610b35565b604082019050919050565b60006108c9601083610a09565b91506108d482610b84565b602082019050919050565b60006108ec602083610a09565b91506108f782610bad565b602082019050919050565b600060208201905061091760008301846107f2565b92915050565b60006020820190506109326000830184610801565b92915050565b60006020820190508181036000830152610953818486610810565b90509392505050565b60006020820190508181036000830152610976818461083d565b905092915050565b6000602082019050818103600083015261099781610876565b9050919050565b600060208201905081810360008301526109b781610899565b9050919050565b600060208201905081810360008301526109d7816108bc565b9050919050565b600060208201905081810360008301526109f7816108df565b9050919050565b600081519050919050565b600082825260208201905092915050565b6000610a2582610a38565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015610a85578082015181840152602081019050610a6a565b83811115610a94576000848401525b50505050565b60006002820490506001821680610ab257607f821691505b60208210811415610ac657610ac5610acc565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610bdf81610a1a565b8114610bea57600080fd5b5056fea2646970667358221220c5fcbfcfc4bc4cf530946e19036203425d89ee51f777363c398a3cc768c1faa664736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4781,
        "contract": "contracts/PausableBox.sol:PausableBox",
        "label": "_paused",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 1014,
        "contract": "contracts/PausableBox.sol:PausableBox",
        "label": "_owner",
        "offset": 1,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 11046,
        "contract": "contracts/PausableBox.sol:PausableBox",
        "label": "value",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  }
}