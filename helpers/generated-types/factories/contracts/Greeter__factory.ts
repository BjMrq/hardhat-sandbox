/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Greeter, GreeterInterface } from "../../contracts/Greeter";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "greet",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    name: "setGreeting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000ccd38038062000ccd833981810160405281019062000037919062000265565b620000576200004b6200007760201b60201c565b6200007f60201b60201c565b80600190805190602001906200006f92919062000143565b50506200041a565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b82805462000151906200033f565b90600052602060002090601f016020900481019282620001755760008555620001c1565b82601f106200019057805160ff1916838001178555620001c1565b82800160010185558215620001c1579182015b82811115620001c0578251825591602001919060010190620001a3565b5b509050620001d09190620001d4565b5090565b5b80821115620001ef576000816000905550600101620001d5565b5090565b60006200020a6200020484620002d3565b620002aa565b9050828152602081018484840111156200022357600080fd5b6200023084828562000309565b509392505050565b600082601f8301126200024a57600080fd5b81516200025c848260208601620001f3565b91505092915050565b6000602082840312156200027857600080fd5b600082015167ffffffffffffffff8111156200029357600080fd5b620002a18482850162000238565b91505092915050565b6000620002b6620002c9565b9050620002c4828262000375565b919050565b6000604051905090565b600067ffffffffffffffff821115620002f157620002f0620003da565b5b620002fc8262000409565b9050602081019050919050565b60005b83811015620003295780820151818401526020810190506200030c565b8381111562000339576000848401525b50505050565b600060028204905060018216806200035857607f821691505b602082108114156200036f576200036e620003ab565b5b50919050565b620003808262000409565b810181811067ffffffffffffffff82111715620003a257620003a1620003da565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6108a3806200042a6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b14610066578063a413686214610084578063cfae3217146100a0578063f2fde38b146100be575b600080fd5b6100646100da565b005b61006e6100ee565b60405161007b91906105a9565b60405180910390f35b61009e600480360381019061009991906104da565b610117565b005b6100a8610131565b6040516100b591906105c4565b60405180910390f35b6100d860048036038101906100d391906104b1565b6101c3565b005b6100e2610247565b6100ec60006102c5565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b806001908051906020019061012d929190610391565b5050565b6060600180546101409061070c565b80601f016020809104026020016040519081016040528092919081815260200182805461016c9061070c565b80156101b95780601f1061018e576101008083540402835291602001916101b9565b820191906000526020600020905b81548152906001019060200180831161019c57829003601f168201915b5050505050905090565b6101cb610247565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561023b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610232906105e6565b60405180910390fd5b610244816102c5565b50565b61024f610389565b73ffffffffffffffffffffffffffffffffffffffff1661026d6100ee565b73ffffffffffffffffffffffffffffffffffffffff16146102c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ba90610606565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b82805461039d9061070c565b90600052602060002090601f0160209004810192826103bf5760008555610406565b82601f106103d857805160ff1916838001178555610406565b82800160010185558215610406579182015b828111156104055782518255916020019190600101906103ea565b5b5090506104139190610417565b5090565b5b80821115610430576000816000905550600101610418565b5090565b60006104476104428461064b565b610626565b90508281526020810184848401111561045f57600080fd5b61046a8482856106ca565b509392505050565b60008135905061048181610856565b92915050565b600082601f83011261049857600080fd5b81356104a8848260208601610434565b91505092915050565b6000602082840312156104c357600080fd5b60006104d184828501610472565b91505092915050565b6000602082840312156104ec57600080fd5b600082013567ffffffffffffffff81111561050657600080fd5b61051284828501610487565b91505092915050565b61052481610698565b82525050565b60006105358261067c565b61053f8185610687565b935061054f8185602086016106d9565b610558816107cd565b840191505092915050565b6000610570602683610687565b915061057b826107de565b604082019050919050565b6000610593602083610687565b915061059e8261082d565b602082019050919050565b60006020820190506105be600083018461051b565b92915050565b600060208201905081810360008301526105de818461052a565b905092915050565b600060208201905081810360008301526105ff81610563565b9050919050565b6000602082019050818103600083015261061f81610586565b9050919050565b6000610630610641565b905061063c828261073e565b919050565b6000604051905090565b600067ffffffffffffffff8211156106665761066561079e565b5b61066f826107cd565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006106a3826106aa565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b838110156106f75780820151818401526020810190506106dc565b83811115610706576000848401525b50505050565b6000600282049050600182168061072457607f821691505b602082108114156107385761073761076f565b5b50919050565b610747826107cd565b810181811067ffffffffffffffff821117156107665761076561079e565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b61085f81610698565b811461086a57600080fd5b5056fea2646970667358221220b2c9a85e5eace3fab7a46682e44d0e6cc8b5355bb13fe39f7aed5101bc27c13664736f6c63430008040033";

type GreeterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GreeterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Greeter__factory extends ContractFactory {
  constructor(...args: GreeterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _greeting: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Greeter> {
    return super.deploy(_greeting, overrides || {}) as Promise<Greeter>;
  }
  override getDeployTransaction(
    _greeting: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_greeting, overrides || {});
  }
  override attach(address: string): Greeter {
    return super.attach(address) as Greeter;
  }
  override connect(signer: Signer): Greeter__factory {
    return super.connect(signer) as Greeter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GreeterInterface {
    return new utils.Interface(_abi) as GreeterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Greeter {
    return new Contract(address, _abi, signerOrProvider) as Greeter;
  }
}
