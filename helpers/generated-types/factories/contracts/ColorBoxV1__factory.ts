/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ColorBoxV1,
  ColorBoxV1Interface,
} from "../../contracts/ColorBoxV1";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "newValue",
        type: "string",
      },
    ],
    name: "ColorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "newValue",
        type: "bool",
      },
    ],
    name: "ShouldRevertChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newColor",
        type: "string",
      },
    ],
    name: "changeColorCouldRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newColor",
        type: "string",
      },
    ],
    name: "changeColorDryRun",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newColor",
        type: "string",
      },
    ],
    name: "changeColorOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newValue",
        type: "string",
      },
    ],
    name: "changeValueNoRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getColor",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_testKey",
        type: "string",
      },
    ],
    name: "getMapping",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "initialColor",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shouldRevert",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "switchShouldRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "testMapping",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "testRevert",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_testKey",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_testVal",
        type: "uint256",
      },
    ],
    name: "updateMapping",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061149a806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80639a86139b11610097578063d3072d8211610066578063d3072d821461024d578063e186e7271461026b578063f2fde38b14610287578063f62d1888146102a357610100565b80639a86139b146101ed578063a26388bb1461020b578063ac7a25ee14610215578063b85b29951461023157610100565b806315b60141116100d357806315b60141146101795780635f606662146101a9578063715018a6146101c55780638da5cb5b146101cf57610100565b80630cab219a146101055780630d8e6e2c1461012157806311f45e9c1461013f578063142c9eb51461016f575b600080fd5b61011f600480360381019061011a9190610cce565b6102bf565b005b61012961035e565b6040516101369190610fd9565b60405180910390f35b61015960048036038101906101549190610d13565b61039b565b60405161016691906110bb565b60405180910390f35b6101776103c3565b005b610193600480360381019061018e9190610d13565b61043d565b6040516101a091906110bb565b60405180910390f35b6101c360048036038101906101be9190610d54565b61046b565b005b6101cd610492565b005b6101d76104a6565b6040516101e49190610f64565b60405180910390f35b6101f56104d0565b6040516102029190610fd9565b60405180910390f35b6102136105b2565b005b61022f600480360381019061022a9190610cce565b6105f5565b005b61024b60048036038101906102469190610cce565b610632565b005b610255610681565b6040516102629190610f7f565b60405180910390f35b61028560048036038101906102809190610cce565b610694565b005b6102a1600480360381019061029c9190610ca5565b6106eb565b005b6102bd60048036038101906102b89190610d13565b61076f565b005b606660009054906101000a900460ff161561030f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103069061109b565b60405180910390fd5b818160659190610320929190610aa0565b507fea8482eb24fdcbd88250f9fd14644f201467fcaf3c5f08a0675ed9d46977ae3b8282604051610352929190610fb5565b60405180910390a15050565b60606040518060400160405280600281526020017f5631000000000000000000000000000000000000000000000000000000000000815250905090565b60006067826040516103ad9190610f4d565b9081526020016040518091039020549050919050565b6103cb6108e0565b606660009054906101000a900460ff1615606660006101000a81548160ff0219169083151502179055507f88e95cf2f314e458491f98f3be8f296ee704bfc5b2cbeddcda73b61d44c9060b606660009054906101000a900460ff166040516104339190610f7f565b60405180910390a1565b6067818051602081018201805184825260208301602085012081835280955050505050506000915090505481565b8060678360405161047c9190610f4d565b9081526020016040518091039020819055505050565b61049a6108e0565b6104a4600061095e565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060606660009054906101000a900460ff1615610522576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105199061109b565b60405180910390fd5b6065805461052f906111fc565b80601f016020809104026020016040519081016040528092919081815260200182805461055b906111fc565b80156105a85780601f1061057d576101008083540402835291602001916105a8565b820191906000526020600020905b81548152906001019060200180831161058b57829003601f168201915b5050505050905090565b60006105f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ea90610ffb565b60405180910390fd5b565b7fea8482eb24fdcbd88250f9fd14644f201467fcaf3c5f08a0675ed9d46977ae3b8282604051610626929190610fb5565b60405180910390a15050565b818160659190610643929190610aa0565b507fea8482eb24fdcbd88250f9fd14644f201467fcaf3c5f08a0675ed9d46977ae3b8282604051610675929190610fb5565b60405180910390a15050565b606660009054906101000a900460ff1681565b61069c6108e0565b8181606591906106ad929190610aa0565b507fea8482eb24fdcbd88250f9fd14644f201467fcaf3c5f08a0675ed9d46977ae3b82826040516106df929190610fb5565b60405180910390a15050565b6106f36108e0565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610763576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075a9061101b565b60405180910390fd5b61076c8161095e565b50565b60008060019054906101000a900460ff161590508080156107a05750600160008054906101000a900460ff1660ff16105b806107cd57506107af30610a24565b1580156107cc5750600160008054906101000a900460ff1660ff16145b5b61080c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108039061103b565b60405180910390fd5b60016000806101000a81548160ff021916908360ff1602179055508015610849576001600060016101000a81548160ff0219169083151502179055505b610851610a47565b8160659080519060200190610867929190610b26565b506000606660006101000a81548160ff02191690831515021790555080156108dc5760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516108d39190610f9a565b60405180910390a15b5050565b6108e8610a98565b73ffffffffffffffffffffffffffffffffffffffff166109066104a6565b73ffffffffffffffffffffffffffffffffffffffff161461095c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109539061105b565b60405180910390fd5b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff16610a96576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8d9061107b565b60405180910390fd5b565b600033905090565b828054610aac906111fc565b90600052602060002090601f016020900481019282610ace5760008555610b15565b82601f10610ae757803560ff1916838001178555610b15565b82800160010185558215610b15579182015b82811115610b14578235825591602001919060010190610af9565b5b509050610b229190610bac565b5090565b828054610b32906111fc565b90600052602060002090601f016020900481019282610b545760008555610b9b565b82601f10610b6d57805160ff1916838001178555610b9b565b82800160010185558215610b9b579182015b82811115610b9a578251825591602001919060010190610b7f565b5b509050610ba89190610bac565b5090565b5b80821115610bc5576000816000905550600101610bad565b5090565b6000610bdc610bd7846110fb565b6110d6565b905082815260208101848484011115610bf457600080fd5b610bff8482856111ba565b509392505050565b600081359050610c1681611436565b92915050565b60008083601f840112610c2e57600080fd5b8235905067ffffffffffffffff811115610c4757600080fd5b602083019150836001820283011115610c5f57600080fd5b9250929050565b600082601f830112610c7757600080fd5b8135610c87848260208601610bc9565b91505092915050565b600081359050610c9f8161144d565b92915050565b600060208284031215610cb757600080fd5b6000610cc584828501610c07565b91505092915050565b60008060208385031215610ce157600080fd5b600083013567ffffffffffffffff811115610cfb57600080fd5b610d0785828601610c1c565b92509250509250929050565b600060208284031215610d2557600080fd5b600082013567ffffffffffffffff811115610d3f57600080fd5b610d4b84828501610c66565b91505092915050565b60008060408385031215610d6757600080fd5b600083013567ffffffffffffffff811115610d8157600080fd5b610d8d85828601610c66565b9250506020610d9e85828601610c90565b9150509250929050565b610db181611153565b82525050565b610dc081611165565b82525050565b610dcf816111a8565b82525050565b6000610de18385611137565b9350610dee8385846111ba565b610df7836112bd565b840190509392505050565b6000610e0d8261112c565b610e178185611137565b9350610e278185602086016111c9565b610e30816112bd565b840191505092915050565b6000610e468261112c565b610e508185611148565b9350610e608185602086016111c9565b80840191505092915050565b6000610e79601783611137565b9150610e84826112ce565b602082019050919050565b6000610e9c602683611137565b9150610ea7826112f7565b604082019050919050565b6000610ebf602e83611137565b9150610eca82611346565b604082019050919050565b6000610ee2602083611137565b9150610eed82611395565b602082019050919050565b6000610f05602b83611137565b9150610f10826113be565b604082019050919050565b6000610f28600d83611137565b9150610f338261140d565b602082019050919050565b610f4781611191565b82525050565b6000610f598284610e3b565b915081905092915050565b6000602082019050610f796000830184610da8565b92915050565b6000602082019050610f946000830184610db7565b92915050565b6000602082019050610faf6000830184610dc6565b92915050565b60006020820190508181036000830152610fd0818486610dd5565b90509392505050565b60006020820190508181036000830152610ff38184610e02565b905092915050565b6000602082019050818103600083015261101481610e6c565b9050919050565b6000602082019050818103600083015261103481610e8f565b9050919050565b6000602082019050818103600083015261105481610eb2565b9050919050565b6000602082019050818103600083015261107481610ed5565b9050919050565b6000602082019050818103600083015261109481610ef8565b9050919050565b600060208201905081810360008301526110b481610f1b565b9050919050565b60006020820190506110d06000830184610f3e565b92915050565b60006110e06110f1565b90506110ec828261122e565b919050565b6000604051905090565b600067ffffffffffffffff8211156111165761111561128e565b5b61111f826112bd565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600061115e82611171565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006111b38261119b565b9050919050565b82818337600083830152505050565b60005b838110156111e75780820151818401526020810190506111cc565b838111156111f6576000848401525b50505050565b6000600282049050600182168061121457607f821691505b602082108114156112285761122761125f565b5b50919050565b611237826112bd565b810181811067ffffffffffffffff821117156112565761125561128e565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f43616c6c20686173206265656e20726576657274656421000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b7f53657420746f2072657665727400000000000000000000000000000000000000600082015250565b61143f81611153565b811461144a57600080fd5b50565b61145681611191565b811461146157600080fd5b5056fea26469706673582212204f6186dc1ceaab140cc850acea3239eaf2cb8136ef4154eff8bdb462edcd24b964736f6c63430008040033";

type ColorBoxV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ColorBoxV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ColorBoxV1__factory extends ContractFactory {
  constructor(...args: ColorBoxV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ColorBoxV1> {
    return super.deploy(overrides || {}) as Promise<ColorBoxV1>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ColorBoxV1 {
    return super.attach(address) as ColorBoxV1;
  }
  override connect(signer: Signer): ColorBoxV1__factory {
    return super.connect(signer) as ColorBoxV1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ColorBoxV1Interface {
    return new utils.Interface(_abi) as ColorBoxV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ColorBoxV1 {
    return new Contract(address, _abi, signerOrProvider) as ColorBoxV1;
  }
}
