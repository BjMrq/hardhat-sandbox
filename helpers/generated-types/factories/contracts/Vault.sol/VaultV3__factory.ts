/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  VaultV3,
  VaultV3Interface,
} from "../../../contracts/Vault.sol/VaultV3";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "FeeChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Sweeped",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "feePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feesCollected",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_wallet",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sweep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "wallet",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611197806100206000396000f3fe6080604052600436106100dd5760003560e01c806369fe0e2d1161007f578063b4988fd011610059578063b4988fd014610250578063d0e30db014610279578063f071db5a14610283578063f851a440146102ae576100dd565b806369fe0e2d146101e55780638456cb591461020e578063a001ecdd14610225576100dd565b80633f4ba83a116100bb5780633f4ba83a1461014d578063521eb2731461016457806354fd4d501461018f5780635c975abb146101ba576100dd565b806327e235e3146100e257806335faa4161461011f5780633ccfd60b14610136575b600080fd5b3480156100ee57600080fd5b5061010960048036038101906101049190610a61565b6102d9565b6040516101169190610dd1565b60405180910390f35b34801561012b57600080fd5b506101346102f1565b005b34801561014257600080fd5b5061014b6103c3565b005b34801561015957600080fd5b5061016261041d565b005b34801561017057600080fd5b506101796104b5565b6040516101869190610c50565b60405180910390f35b34801561019b57600080fd5b506101a46104db565b6040516101b19190610d0f565b60405180910390f35b3480156101c657600080fd5b506101cf610518565b6040516101dc9190610cf4565b60405180910390f35b3480156101f157600080fd5b5061020c60048036038101906102079190610a8a565b61052b565b005b34801561021a57600080fd5b506102236105fc565b005b34801561023157600080fd5b5061023a610695565b6040516102479190610dd1565b60405180910390f35b34801561025c57600080fd5b5061027760048036038101906102729190610ab3565b61069b565b005b6102816107ba565b005b34801561028f57600080fd5b50610298610814565b6040516102a59190610dd1565b60405180910390f35b3480156102ba57600080fd5b506102c361081a565b6040516102d09190610c35565b60405180910390f35b60046020528060005260406000206000915090505481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6001549081150290604051600060405180830381858888f1935050505015801561035b573d6000803e3d6000fd5b507f1b94d65e3a03a98b13e90142a41884547fdd622b7f14a4daf94f6338e2e85cf0600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001546040516103b1929190610c6b565b60405180910390a16000600181905550565b600560009054906101000a900460ff1615610413576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040a90610db1565b60405180910390fd5b61041b610840565b565b600560009054906101000a900460ff1661046c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046390610d51565b60405180910390fd5b6000600560006101000a81548160ff0219169083151502179055507fa45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d1693360405160405180910390a1565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606040518060400160405280600481526020017f76332e3000000000000000000000000000000000000000000000000000000000815250905090565b600560009054906101000a900460ff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b290610d31565b60405180910390fd5b806000819055507f6bbc57480a46553fa4d156ce702beef5f3ad66303b0ed1a5d4cb44966c6584c3816040516105f19190610dd1565b60405180910390a150565b600560009054906101000a900460ff161561064c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064390610d71565b60405180910390fd5b6001600560006101000a81548160ff0219169083151502179055507f9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e75260405160405180910390a1565b60005481565b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461072c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072390610d91565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600081905550505050565b600560009054906101000a900460ff161561080a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080190610db1565b60405180910390fd5b61081261094c565b565b60015481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561090f573d6000803e3d6000fd5b507f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d53382604051610941929190610c94565b60405180910390a150565b600060646000543461095e9190610e8f565b6109689190610e5e565b905080346109769190610ee9565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109c49190610e08565b9250508190555080600160008282546109dd9190610e08565b925050819055507f73a19dd210f1a7f902193214c0ee91dd35ee5b4d920cba8d519eca65a7b488ca333483604051610a1793929190610cbd565b60405180910390a150565b600081359050610a318161111c565b92915050565b600081359050610a4681611133565b92915050565b600081359050610a5b8161114a565b92915050565b600060208284031215610a7357600080fd5b6000610a8184828501610a22565b91505092915050565b600060208284031215610a9c57600080fd5b6000610aaa84828501610a4c565b91505092915050565b600080600060608486031215610ac857600080fd5b6000610ad686828701610a4c565b9350506020610ae786828701610a22565b9250506040610af886828701610a37565b9150509250925092565b610b0b81610f77565b82525050565b610b1a81610f2f565b82525050565b610b2981610f1d565b82525050565b610b3881610f41565b82525050565b6000610b4982610dec565b610b538185610df7565b9350610b63818560208601610fad565b610b6c8161103e565b840191505092915050565b6000610b84600c83610df7565b9150610b8f8261104f565b602082019050919050565b6000610ba7601383610df7565b9150610bb282611078565b602082019050919050565b6000610bca601783610df7565b9150610bd5826110a1565b602082019050919050565b6000610bed601383610df7565b9150610bf8826110ca565b602082019050919050565b6000610c10601283610df7565b9150610c1b826110f3565b602082019050919050565b610c2f81610f6d565b82525050565b6000602082019050610c4a6000830184610b20565b92915050565b6000602082019050610c656000830184610b11565b92915050565b6000604082019050610c806000830185610b02565b610c8d6020830184610c26565b9392505050565b6000604082019050610ca96000830185610b20565b610cb66020830184610c26565b9392505050565b6000606082019050610cd26000830186610b20565b610cdf6020830185610c26565b610cec6040830184610c26565b949350505050565b6000602082019050610d096000830184610b2f565b92915050565b60006020820190508181036000830152610d298184610b3e565b905092915050565b60006020820190508181036000830152610d4a81610b77565b9050919050565b60006020820190508181036000830152610d6a81610b9a565b9050919050565b60006020820190508181036000830152610d8a81610bbd565b9050919050565b60006020820190508181036000830152610daa81610be0565b9050919050565b60006020820190508181036000830152610dca81610c03565b9050919050565b6000602082019050610de66000830184610c26565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610e1382610f6d565b9150610e1e83610f6d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e5357610e52610fe0565b5b828201905092915050565b6000610e6982610f6d565b9150610e7483610f6d565b925082610e8457610e8361100f565b5b828204905092915050565b6000610e9a82610f6d565b9150610ea583610f6d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ede57610edd610fe0565b5b828202905092915050565b6000610ef482610f6d565b9150610eff83610f6d565b925082821015610f1257610f11610fe0565b5b828203905092915050565b6000610f2882610f4d565b9050919050565b6000610f3a82610f4d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610f8282610f89565b9050919050565b6000610f9482610f9b565b9050919050565b6000610fa682610f4d565b9050919050565b60005b83811015610fcb578082015181840152602081019050610fb0565b83811115610fda576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b7f556e617574686f72697a65640000000000000000000000000000000000000000600082015250565b7f436f6e7472616374206e6f742070617573656400000000000000000000000000600082015250565b7f436f6e747261637420616c726561647920706175736564000000000000000000600082015250565b7f416c726561647920696e697469616c697a656400000000000000000000000000600082015250565b7f436f6e7472616374206973207061757365640000000000000000000000000000600082015250565b61112581610f1d565b811461113057600080fd5b50565b61113c81610f2f565b811461114757600080fd5b50565b61115381610f6d565b811461115e57600080fd5b5056fea2646970667358221220e9161a9597913eda0860178a746694c4b7a4ac8476260af92449f7295879f9ad64736f6c63430008040033";

type VaultV3ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultV3ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VaultV3__factory extends ContractFactory {
  constructor(...args: VaultV3ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VaultV3> {
    return super.deploy(overrides || {}) as Promise<VaultV3>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): VaultV3 {
    return super.attach(address) as VaultV3;
  }
  override connect(signer: Signer): VaultV3__factory {
    return super.connect(signer) as VaultV3__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultV3Interface {
    return new utils.Interface(_abi) as VaultV3Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VaultV3 {
    return new Contract(address, _abi, signerOrProvider) as VaultV3;
  }
}
